{"ast":null,"code":"import { GET_LOGIN_DETAILS_FAILURE, GET_LOGIN_DETAILS_REQUEST, GET_LOGIN_DETAILS_SUCCESS, LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT, POST_SIGNUP_DETAILS_FAILURE, POST_SIGNUP_DETAILS_REQUEST, POST_SIGNUP_DETAILS_SUCCESS } from \"./actionTypes\";\nconst initData = {\n  isLoggedin: false,\n  isSignedin: false,\n  isLoading: false,\n  isError: false,\n  loginDetails: {}\n};\nexport const authReducer = (state = initData, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case POST_SIGNUP_DETAILS_REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n\n    case POST_SIGNUP_DETAILS_SUCCESS:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: false,\n          isSignedin: true\n        };\n      }\n\n    case POST_SIGNUP_DETAILS_FAILURE:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n\n    case GET_LOGIN_DETAILS_REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n\n    case GET_LOGIN_DETAILS_SUCCESS:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: false,\n          loginDetails: payload\n        };\n      }\n\n    case GET_LOGIN_DETAILS_FAILURE:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n\n    case LOGIN_SUCCESS:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: false,\n          isLoggedin: true\n        };\n      }\n\n    case LOGIN_FAILURE:\n      {\n        return { ...state,\n          isLoading: false,\n          isError: true,\n          isLoggedin: false\n        };\n      }\n\n    case LOGOUT:\n      {\n        return { ...state,\n          isLoggedin: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Â /Meetup/meetup/meetup/src/Redux/AuthRedux/authReducer.js"],"names":["GET_LOGIN_DETAILS_FAILURE","GET_LOGIN_DETAILS_REQUEST","GET_LOGIN_DETAILS_SUCCESS","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT","POST_SIGNUP_DETAILS_FAILURE","POST_SIGNUP_DETAILS_REQUEST","POST_SIGNUP_DETAILS_SUCCESS","initData","isLoggedin","isSignedin","isLoading","isError","loginDetails","authReducer","state","type","payload"],"mappings":"AAAA,SACIA,yBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,MANJ,EAOIC,2BAPJ,EAQIC,2BARJ,EASIC,2BATJ,QAUO,eAVP;AAcA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE,KADC;AAEbC,EAAAA,UAAU,EAAE,KAFC;AAGbC,EAAAA,SAAS,EAAE,KAHE;AAIbC,EAAAA,OAAO,EAAE,KAJI;AAKbC,EAAAA,YAAY,EAAE;AALD,CAAjB;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,QAAT,EAAmB;AAC1CQ,EAAAA,IAD0C;AAE1CC,EAAAA;AAF0C,CAAnB,KAGrB;AACF,UAAQD,IAAR;AACI,SAAKV,2BAAL;AAAkC;AAC9B,eAAO,EACH,GAAGS,KADA;AAEHJ,UAAAA,SAAS,EAAE,IAFR;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKL,2BAAL;AAAkC;AAC9B,eAAO,EACH,GAAGQ,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE,KAHN;AAIHF,UAAAA,UAAU,EAAE;AAJT,SAAP;AAMH;;AACD,SAAKL,2BAAL;AAAkC;AAC9B,eAAO,EACH,GAAGU,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKZ,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGe,KADA;AAEHJ,UAAAA,SAAS,EAAE,IAFR;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKX,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGc,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE,KAHN;AAIHC,UAAAA,YAAY,EAAEI;AAJX,SAAP;AAMH;;AACD,SAAKlB,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGgB,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKT,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGY,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE,KAHN;AAIHH,UAAAA,UAAU,EAAE;AAJT,SAAP;AAMH;;AACD,SAAKP,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGa,KADA;AAEHJ,UAAAA,SAAS,EAAE,KAFR;AAGHC,UAAAA,OAAO,EAAE,IAHN;AAIHH,UAAAA,UAAU,EAAE;AAJT,SAAP;AAMH;;AACD,SAAKL,MAAL;AAAa;AACT,eAAO,EACH,GAAGW,KADA;AAEHN,UAAAA,UAAU,EAAE;AAFT,SAAP;AAIH;;AACD;AACI,aAAOM,KAAP;AApER;AAsEH,CA1EM","sourcesContent":["import {\r\n    GET_LOGIN_DETAILS_FAILURE,\r\n    GET_LOGIN_DETAILS_REQUEST,\r\n    GET_LOGIN_DETAILS_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    POST_SIGNUP_DETAILS_FAILURE,\r\n    POST_SIGNUP_DETAILS_REQUEST,\r\n    POST_SIGNUP_DETAILS_SUCCESS\r\n} from \"./actionTypes\"\r\n\r\n\r\n\r\nconst initData = {\r\n    isLoggedin: false,\r\n    isSignedin: false,\r\n    isLoading: false,\r\n    isError: false,\r\n    loginDetails: {}\r\n}\r\nexport const authReducer = (state = initData, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case POST_SIGNUP_DETAILS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isError: false\r\n            }\r\n        }\r\n        case POST_SIGNUP_DETAILS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: false,\r\n                isSignedin: true\r\n            }\r\n        }\r\n        case POST_SIGNUP_DETAILS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            }\r\n        }\r\n        case GET_LOGIN_DETAILS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isError: false\r\n            }\r\n        }\r\n        case GET_LOGIN_DETAILS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: false,\r\n                loginDetails: payload\r\n            }\r\n        }\r\n        case GET_LOGIN_DETAILS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            }\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: false,\r\n                isLoggedin: true\r\n            }\r\n        }\r\n        case LOGIN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true,\r\n                isLoggedin: false\r\n            }\r\n        }\r\n        case LOGOUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedin: false\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
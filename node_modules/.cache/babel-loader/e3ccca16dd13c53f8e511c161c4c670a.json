{"ast":null,"code":"import { EVENT_FAILURE, EVENT_REQUEST, EVENT_SUCCESS, FAVORITE_EVENT_FAILURE, FAVORITE_EVENT_REQUEST, FAVORITE_EVENT_SUCCESS } from \"./eventActionTypes\";\nimport axios from \"axios\";\n\nconst eventRequest = () => {\n  return {\n    type: EVENT_REQUEST\n  };\n};\n\nconst eventSuccess = data => {\n  return {\n    type: EVENT_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\n\nconst eventFailure = error => {\n  return {\n    type: EVENT_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\n\nconst favoriteEventRequest = () => {\n  return {\n    type: FAVORITE_EVENT_REQUEST\n  };\n};\n\nconst favoriteEventSuccess = data => {\n  return {\n    type: FAVORITE_EVENT_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\n\nconst favoriteEventFailure = error => {\n  return {\n    type: FAVORITE_EVENT_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\n\nconst eventFetch = () => dispatch => {\n  dispatch(eventRequest());\n  return axios.get(\"https://meetup-project.herokuapp.com/events\").then(res => {\n    // console.log(\"response data\", res.data)\n    //   dispatch(favoriteEventSuccess(res.data.filter(item => item.isStar)))\n    return dispatch(eventSuccess(res.data));\n  }).catch(err => dispatch(eventFailure(err)));\n};\n\nconst favoriteEventUpdate = (id, star) => dispatch => {\n  dispatch(favoriteEventRequest());\n  return axios.patch(`https://meetup-project.herokuapp.com/events/${id}`, {\n    isStar: star\n  }).then(res => {\n    // console.log(res.data, \"saved events request\")\n    dispatch(favoriteEventSuccess(res.data)); // return dispatch(favoriteEventSuccess(res.data))\n\n    return {\n      success: true\n    };\n  }).catch(err => dispatch(favoriteEventFailure(err)));\n};\n\nexport { eventFetch, favoriteEventUpdate };","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Â /Meetup/meetup/meetup/src/Redux/EventRedux/eventAction.js"],"names":["EVENT_FAILURE","EVENT_REQUEST","EVENT_SUCCESS","FAVORITE_EVENT_FAILURE","FAVORITE_EVENT_REQUEST","FAVORITE_EVENT_SUCCESS","axios","eventRequest","type","eventSuccess","data","payload","eventFailure","error","favoriteEventRequest","favoriteEventSuccess","favoriteEventFailure","eventFetch","dispatch","get","then","res","catch","err","favoriteEventUpdate","id","star","patch","isStar","success"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,sBAJF,EAKEC,sBALF,EAMEC,sBANF,QAOO,oBAPP;AASA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMQ,YAAY,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAEN,aADD;AAELS,IAAAA,OAAO,EAAE;AACPD,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD;;AASA,MAAME,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAO;AACLL,IAAAA,IAAI,EAAER,aADD;AAELW,IAAAA,OAAO,EAAE;AACPE,MAAAA,KAAK,EAAEA;AADA;AAFJ,GAAP;AAMD,CAPD;;AASA,MAAMC,oBAAoB,GAAG,MAAM;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,oBAAoB,GAAIL,IAAD,IAAU;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAEH,sBADD;AAELM,IAAAA,OAAO,EAAE;AACPD,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD;;AASA,MAAMM,oBAAoB,GAAIH,KAAD,IAAW;AACtC,SAAO;AACLL,IAAAA,IAAI,EAAEL,sBADD;AAELQ,IAAAA,OAAO,EAAE;AACPE,MAAAA,KAAK,EAAEA;AADA;AAFJ,GAAP;AAMD,CAPD;;AASA,MAAMI,UAAU,GAAG,MAAOC,QAAD,IAAc;AACrCA,EAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACA,SAAOD,KAAK,CACTa,GADI,CACA,6CADA,EAEJC,IAFI,CAEEC,GAAD,IAAS;AACb;AACF;AACE,WAAOH,QAAQ,CAACT,YAAY,CAACY,GAAG,CAACX,IAAL,CAAb,CAAf;AACD,GANI,EAOJY,KAPI,CAOGC,GAAD,IAASL,QAAQ,CAACN,YAAY,CAACW,GAAD,CAAb,CAPnB,CAAP;AAQD,CAVD;;AAYA,MAAMC,mBAAmB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAeR,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACA,SAAOR,KAAK,CACPqB,KADE,CACK,+CAA8CF,EAAG,EADtD,EACyD;AAACG,IAAAA,MAAM,EAACF;AAAR,GADzD,EAEFN,IAFE,CAEIC,GAAD,IAAS;AACX;AACAH,IAAAA,QAAQ,CAACH,oBAAoB,CAACM,GAAG,CAACX,IAAL,CAArB,CAAR,CAFW,CAGX;;AACF,WAAO;AAACmB,MAAAA,OAAO,EAAG;AAAX,KAAP;AACD,GAPE,EAQFP,KARE,CAQKC,GAAD,IAASL,QAAQ,CAACF,oBAAoB,CAACO,GAAD,CAArB,CARrB,CAAP;AASH,CAXD;;AAYA,SAASN,UAAT,EAAqBO,mBAArB","sourcesContent":["import {\r\n  EVENT_FAILURE,\r\n  EVENT_REQUEST,\r\n  EVENT_SUCCESS,\r\n  FAVORITE_EVENT_FAILURE,\r\n  FAVORITE_EVENT_REQUEST,\r\n  FAVORITE_EVENT_SUCCESS,\r\n} from \"./eventActionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst eventRequest = () => {\r\n  return {\r\n    type: EVENT_REQUEST,\r\n  };\r\n};\r\n\r\nconst eventSuccess = (data) => {\r\n  return {\r\n    type: EVENT_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nconst eventFailure = (error) => {\r\n  return {\r\n    type: EVENT_FAILURE,\r\n    payload: {\r\n      error: error,\r\n    },\r\n  };\r\n};\r\n\r\nconst favoriteEventRequest = () => {\r\n  return {\r\n    type: FAVORITE_EVENT_REQUEST,\r\n  };\r\n};\r\n\r\nconst favoriteEventSuccess = (data) => {\r\n  return {\r\n    type: FAVORITE_EVENT_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nconst favoriteEventFailure = (error) => {\r\n  return {\r\n    type: FAVORITE_EVENT_FAILURE,\r\n    payload: {\r\n      error: error,\r\n    },\r\n  };\r\n};\r\n\r\nconst eventFetch = () => (dispatch) => {\r\n  dispatch(eventRequest());\r\n  return axios\r\n    .get(\"https://meetup-project.herokuapp.com/events\")\r\n    .then((res) => {\r\n      // console.log(\"response data\", res.data)\r\n    //   dispatch(favoriteEventSuccess(res.data.filter(item => item.isStar)))\r\n      return dispatch(eventSuccess(res.data));\r\n    })\r\n    .catch((err) => dispatch(eventFailure(err)));\r\n};\r\n\r\nconst favoriteEventUpdate = (id, star) => (dispatch) => {\r\n    dispatch(favoriteEventRequest())\r\n    return axios\r\n        .patch(`https://meetup-project.herokuapp.com/events/${id}`, {isStar:star})\r\n        .then((res) => {\r\n            // console.log(res.data, \"saved events request\")\r\n            dispatch(favoriteEventSuccess(res.data))\r\n            // return dispatch(favoriteEventSuccess(res.data))\r\n          return {success : true}\r\n        })\r\n        .catch((err) => dispatch(favoriteEventFailure(err)))\r\n}\r\nexport { eventFetch, favoriteEventUpdate};\r\n"]},"metadata":{},"sourceType":"module"}